#!/usr/bin/env node

/**
 * üé® Design Switcher - Pump Dex Mini App
 * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–µ—Ä—Å–∏—è–º–∏ –¥–∏–∑–∞–π–Ω–∞
 */

const fs = require('fs');
const path = require('path');

const DESIGNS = {
    'v1': {
        name: 'Original Design',
        folder: 'public/designs/v1-original',
        files: {
            'index.html': 'public/index.html',
            'script.js': 'public/script.js',
            'style-modern.css': 'public/style-modern.css'
        }
    },
    'v2': {
        name: 'Lovable Design',
        folder: 'public/designs/v2-lovable',
        files: {
            'index-lovable.html': 'public/index.html',
            'script-lovable.js': 'public/script.js',
            'style-lovable.css': 'public/style-lovable.css'
        }
    }
};

function switchDesign(version) {
    const design = DESIGNS[version];
    
    if (!design) {
        console.error(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è: ${version}`);
        console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏:');
        Object.keys(DESIGNS).forEach(key => {
            console.log(`   ${key} - ${DESIGNS[key].name}`);
        });
        process.exit(1);
    }
    
    console.log(`üé® –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ ${design.name}...`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    const missingFiles = [];
    Object.keys(design.files).forEach(sourceFile => {
        const sourcePath = path.join(design.folder, sourceFile);
        if (!fs.existsSync(sourcePath)) {
            missingFiles.push(sourceFile);
        }
    });
    
    if (missingFiles.length > 0) {
        console.error(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã –≤ ${design.folder}:`);
        missingFiles.forEach(file => console.error(`   - ${file}`));
        process.exit(1);
    }
    
    // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    let copiedFiles = 0;
    Object.entries(design.files).forEach(([sourceFile, targetFile]) => {
        const sourcePath = path.join(design.folder, sourceFile);
        const targetPath = targetFile;
        
        try {
            // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
            if (fs.existsSync(targetPath)) {
                const backupPath = `${targetPath}.backup`;
                fs.copyFileSync(targetPath, backupPath);
                console.log(`üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: ${backupPath}`);
            }
            
            // –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
            fs.copyFileSync(sourcePath, targetPath);
            console.log(`‚úÖ ${sourceFile} ‚Üí ${targetFile}`);
            copiedFiles++;
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è ${sourceFile}:`, error.message);
        }
    });
    
    console.log(`üéâ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ ${design.name}!`);
    console.log(`üìÅ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${copiedFiles}`);
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π');
}

function listDesigns() {
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –¥–∏–∑–∞–π–Ω–∞:');
    console.log('');
    
    Object.entries(DESIGNS).forEach(([key, design]) => {
        console.log(`üé® ${key} - ${design.name}`);
        console.log(`   üìÅ –ü–∞–ø–∫–∞: ${design.folder}`);
        console.log(`   üìÑ –§–∞–π–ª—ã:`);
        Object.keys(design.files).forEach(file => {
            console.log(`      - ${file}`);
        });
        console.log('');
    });
}

function showHelp() {
    console.log('üé® Design Switcher - Pump Dex Mini App');
    console.log('');
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
    console.log('  node switch-design.js <version>  - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –≤–µ—Ä—Å–∏—é');
    console.log('  node switch-design.js list       - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏');
    console.log('  node switch-design.js help       - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É');
    console.log('');
    console.log('–ü—Ä–∏–º–µ—Ä—ã:');
    console.log('  node switch-design.js v1         - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω');
    console.log('  node switch-design.js v2         - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ Lovable –¥–∏–∑–∞–π–Ω');
    console.log('');
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
const args = process.argv.slice(2);
const command = args[0];

if (!command) {
    showHelp();
    process.exit(1);
}

switch (command) {
    case 'help':
    case '--help':
    case '-h':
        showHelp();
        break;
        
    case 'list':
        listDesigns();
        break;
        
    default:
        switchDesign(command);
        break;
}

