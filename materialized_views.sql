-- üìä MATERIALIZED VIEWS –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ Smart Money

-- ================================================
-- –í–ê–ñ–ù–û! –¢–†–ï–ë–£–ï–¢–°–Ø Market Cap –≤ events —Ç–∞–±–ª–∏—Ü–µ:
-- ================================================
-- ALTER TABLE events 
-- ADD COLUMN entry_market_cap NUMERIC,
-- ADD COLUMN exit_market_cap NUMERIC,
-- ADD COLUMN entry_price NUMERIC;

-- ================================================
-- TRADER_STATS_DAILY - –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑ –≤ —á–∞—Å
-- ================================================
CREATE MATERIALIZED VIEW IF NOT EXISTS trader_stats_daily AS
WITH trader_trades AS (
    -- –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–∞—Ä—ã BUY/SELL –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
    SELECT 
        wallet,
        token_mint,
        MIN(CASE WHEN side = 'BUY' THEN entry_market_cap END) as buy_market_cap,
        MAX(CASE WHEN side = 'SELL' THEN exit_market_cap END) as sell_market_cap,
        SUM(CASE WHEN side = 'BUY' THEN sol_spent ELSE 0 END) as total_buy_sol,
        SUM(CASE WHEN side = 'SELL' THEN sol_received ELSE 0 END) as total_sell_sol,
        COUNT(CASE WHEN side = 'BUY' THEN 1 END) as buys,
        COUNT(CASE WHEN side = 'SELL' THEN 1 END) as sells
    FROM events
    WHERE ts >= NOW() - INTERVAL '30 days'
      AND wallet IS NOT NULL
    GROUP BY wallet, token_mint
),
trader_stats AS (
    SELECT 
        wallet,
        COUNT(*) as total_trades,
        COUNT(CASE WHEN buys > 0 THEN 1 END) as buy_count,
        COUNT(CASE WHEN sells > 0 THEN 1 END) as sell_count,
        SUM(total_buy_sol + total_sell_sol) as total_volume,
        COUNT(DISTINCT token_mint) as unique_tokens,
        
        -- PnL –Ω–∞ –æ—Å–Ω–æ–≤–µ market cap (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç!)
        SUM(CASE 
            WHEN sells > 0 AND buy_market_cap > 0 AND sell_market_cap > 0
            THEN total_buy_sol * ((sell_market_cap - buy_market_cap) / buy_market_cap)
            ELSE 0 
        END) as realized_pnl_mc,
        
        -- PnL –Ω–∞ –æ—Å–Ω–æ–≤–µ SOL (—Ç–µ–∫—É—â–∏–π, –ø—Ä–æ—Å—Ç–æ–π)
        SUM(total_sell_sol - total_buy_sol) as realized_pnl_sol,
        
        SUM(total_buy_sol) as total_invested,
        AVG(total_buy_sol / NULLIF(buys, 0)) as avg_buy_size,
        MAX(total_buy_sol) as max_buy_size,
        
        -- Win Rate –Ω–∞ –æ—Å–Ω–æ–≤–µ market cap
        COUNT(CASE WHEN sells > 0 AND sell_market_cap > buy_market_cap THEN 1 END) as winning_tokens_mc,
        
        -- Win Rate –Ω–∞ –æ—Å–Ω–æ–≤–µ SOL (—Ç–µ–∫—É—â–∏–π)
        COUNT(CASE WHEN sells > 0 AND total_sell_sol > total_buy_sol THEN 1 END) as winning_tokens_sol,
        
        COUNT(CASE WHEN sells > 0 THEN 1 END) as sold_tokens,
        MAX(CASE WHEN sells > 0 THEN token_mint END) as last_sell_token
    FROM trader_trades
    GROUP BY wallet
    HAVING SUM(total_buy_sol) > 0
)
SELECT 
    *,
    -- ROI –Ω–∞ –æ—Å–Ω–æ–≤–µ market cap (–ü–†–ê–í–ò–õ–¨–ù–´–ô!)
    CASE WHEN total_invested > 0 AND realized_pnl_mc IS NOT NULL
         THEN (realized_pnl_mc / total_invested * 100) 
         ELSE 0 
    END as roi_percentage_mc,
    
    -- ROI –Ω–∞ –æ—Å–Ω–æ–≤–µ SOL (–≤—Ä–µ–º–µ–Ω–Ω—ã–π, –ø–æ–∫–∞ –Ω–µ—Ç market cap)
    CASE WHEN total_invested > 0 
         THEN (realized_pnl_sol / total_invested * 100) 
         ELSE 0 
    END as roi_percentage,
    
    -- Win Rate –Ω–∞ –æ—Å–Ω–æ–≤–µ market cap (–ü–†–ê–í–ò–õ–¨–ù–´–ô!)
    CASE WHEN sold_tokens > 0 AND winning_tokens_mc > 0
         THEN (winning_tokens_mc::FLOAT / sold_tokens * 100) 
         ELSE 0 
    END as win_rate_mc,
    
    -- Win Rate –Ω–∞ –æ—Å–Ω–æ–≤–µ SOL (–≤—Ä–µ–º–µ–Ω–Ω—ã–π)
    CASE WHEN sold_tokens > 0 
         THEN (winning_tokens_sol::FLOAT / sold_tokens * 100) 
         ELSE 0 
    END as win_rate,
    
    NOW() as refreshed_at
FROM trader_stats
WHERE total_volume > 0
ORDER BY total_volume DESC;

-- –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
CREATE INDEX IF NOT EXISTS idx_trader_stats_wallet ON trader_stats_daily(wallet);
CREATE INDEX IF NOT EXISTS idx_trader_stats_volume ON trader_stats_daily(total_volume DESC);
CREATE INDEX IF NOT EXISTS idx_trader_stats_roi ON trader_stats_daily(roi_percentage DESC);

-- ================================================
-- REFRESH FUNCTION - –∑–∞–ø—É—Å–∫–∞—Ç—å —Ä–∞–∑ –≤ –¥–µ–Ω—å
-- ================================================
CREATE OR REPLACE FUNCTION refresh_trader_stats()
RETURNS void AS $$
BEGIN
    REFRESH MATERIALIZED VIEW CONCURRENTLY trader_stats_daily;
    RAISE NOTICE 'Trader stats refreshed at %', NOW();
END;
$$ LANGUAGE plpgsql;

-- ================================================
-- CRON JOB (—á–µ—Ä–µ–∑ pg_cron extension)
-- ================================================
-- –ó–∞–ø—É—Å–∫–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00 UTC
-- SELECT cron.schedule('refresh-trader-stats', '0 0 * * *', 'SELECT refresh_trader_stats()');

-- ================================================
-- MANUAL REFRESH (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
-- ================================================
-- SELECT refresh_trader_stats();

-- ================================================
-- USAGE
-- ================================================
-- SELECT * FROM trader_stats_daily 
-- WHERE total_volume > 10 
-- ORDER BY roi_percentage DESC 
-- LIMIT 50;

-- ================================================
-- –û–ë–™–Ø–°–ù–ï–ù–ò–ï –†–ê–°–ß–ï–¢–û–í
-- ================================================

-- ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô —Ä–∞—Å—á–µ—Ç (—Ç–µ–∫—É—â–∏–π):
-- ROI = (SOL_received - SOL_spent) / SOL_spent * 100
-- –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–∫–µ–Ω–∞!
-- –ü—Ä–∏–º–µ—Ä: –ö—É–ø–∏–ª –∑–∞ 0.5 SOL, –ø—Ä–æ–¥–∞–ª –∑–∞ 0.4 SOL
--         ‚Üí ROI = -20%
--         –ù–û! Market cap –≤—ã—Ä–æ—Å —Å $10K –¥–æ $100K
--         ‚Üí –†–µ–∞–ª—å–Ω—ã–π ROI = +900%!

-- ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô —Ä–∞—Å—á–µ—Ç (–Ω—É–∂–µ–Ω market_cap):
-- ROI = ((exit_mc - entry_mc) / entry_mc) * 100
-- –ü—Ä–∏–º–µ—Ä: –ö—É–ø–∏–ª –Ω–∞ $10K market cap, –ø—Ä–æ–¥–∞–ª –Ω–∞ $100K
--         ‚Üí ROI = +900% ‚úÖ
-- 
-- Win Rate = COUNT(exit_mc > entry_mc) / COUNT(sells) * 100
-- PnL = invested_sol * (exit_mc / entry_mc - 1)

-- ================================================
-- –ü–õ–ê–ù –ù–ê –ü–û–ï–ó–î–ö–£ (Session 1)
-- ================================================

-- 1. –î–æ–±–∞–≤–∏—Ç—å market_cap –∫–æ–ª–æ–Ω–∫–∏ –≤ events
-- 2. –û–±–Ω–æ–≤–∏—Ç—å webhook –¥–ª—è –∑–∞–ø–∏—Å–∏ market_cap –ø—Ä–∏ BUY/SELL
-- 3. –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å materialized view —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ä–∞—Å—á–µ—Ç–∞–º–∏
-- 4. –û–±–Ω–æ–≤–∏—Ç—å API –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è roi_percentage_mc –∏ win_rate_mc
-- 5. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å cron –¥–ª—è REFRESH –∫–∞–∂–¥—ã–π —á–∞—Å

-- ================================================
-- TEMPORARY SOLUTION (–ø–æ–∫–∞ –Ω–µ—Ç market_cap)
-- ================================================
-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Volume, Trades, Tokens, Avg Buy
-- –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ROI/PnL/Win Rate (–±—É–¥–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)
-- Badges –Ω–∞ –æ—Å–Ω–æ–≤–µ Volume –∏ activity, –Ω–µ –Ω–∞ ROI

